use derive_more::derive::From;
use kafka_protocol::{
    messages::{
        AddOffsetsToTxnRequest, AddPartitionsToTxnRequest, AllocateProducerIdsRequest,
        AlterClientQuotasRequest, AlterConfigsRequest, AlterPartitionReassignmentsRequest,
        AlterPartitionRequest, AlterReplicaLogDirsRequest, AlterUserScramCredentialsRequest,
        ApiKey, ApiVersionsRequest, AssignReplicasToDirsRequest, BeginQuorumEpochRequest,
        BrokerHeartbeatRequest, BrokerRegistrationRequest, ConsumerGroupHeartbeatRequest,
        ControlledShutdownRequest, ControllerRegistrationRequest, CreateAclsRequest,
        CreateDelegationTokenRequest, CreatePartitionsRequest, CreateTopicsRequest,
        DeleteAclsRequest, DeleteGroupsRequest, DeleteRecordsRequest, DeleteTopicsRequest,
        DescribeAclsRequest, DescribeClientQuotasRequest, DescribeClusterRequest,
        DescribeConfigsRequest, DescribeDelegationTokenRequest, DescribeGroupsRequest,
        DescribeLogDirsRequest, DescribeProducersRequest, DescribeQuorumRequest,
        DescribeTransactionsRequest, DescribeUserScramCredentialsRequest, ElectLeadersRequest,
        EndQuorumEpochRequest, EndTxnRequest, EnvelopeRequest, ExpireDelegationTokenRequest,
        FetchRequest, FetchSnapshotRequest, FindCoordinatorRequest,
        GetTelemetrySubscriptionsRequest, HeartbeatRequest, IncrementalAlterConfigsRequest,
        InitProducerIdRequest, JoinGroupRequest, LeaderAndIsrRequest, LeaveGroupRequest,
        ListClientMetricsResourcesRequest, ListGroupsRequest, ListOffsetsRequest,
        ListPartitionReassignmentsRequest, ListTransactionsRequest, MetadataRequest,
        OffsetCommitRequest, OffsetDeleteRequest, OffsetFetchRequest, OffsetForLeaderEpochRequest,
        ProduceRequest, PushTelemetryRequest, RenewDelegationTokenRequest, SaslAuthenticateRequest,
        SaslHandshakeRequest, StopReplicaRequest, SyncGroupRequest, TxnOffsetCommitRequest,
        UnregisterBrokerRequest, UpdateFeaturesRequest, UpdateMetadataRequest, VoteRequest,
        WriteTxnMarkersRequest,
    },
    protocol::{buf::ByteBufMut, Encodable, Message},
};

use crate::conn::VersionedRequest;

#[non_exhaustive]
#[allow(unused)]
#[derive(Debug, Clone, From)]
pub enum KafkaRequest {
    AddOffsetsToTxn(#[from] AddOffsetsToTxnRequest),
    AddPartitionsToTxn(#[from] AddPartitionsToTxnRequest),
    AllocateProducerIds(#[from] AllocateProducerIdsRequest),
    AlterClientQuotas(#[from] AlterClientQuotasRequest),
    AlterConfigs(#[from] AlterConfigsRequest),
    AlterPartitionReassignments(#[from] AlterPartitionReassignmentsRequest),
    AlterPartition(#[from] AlterPartitionRequest),
    AlterReplicaLogDirs(#[from] AlterReplicaLogDirsRequest),
    AlterUserScramCredentials(#[from] AlterUserScramCredentialsRequest),
    ApiVersions(#[from] ApiVersionsRequest),
    AssignReplicasToDirs(#[from] AssignReplicasToDirsRequest),
    BeginQuorumEpoch(#[from] BeginQuorumEpochRequest),
    BrokerHeartbeat(#[from] BrokerHeartbeatRequest),
    BrokerRegistration(#[from] BrokerRegistrationRequest),
    ConsumerGroupHeartbeat(#[from] ConsumerGroupHeartbeatRequest),
    ControlledShutdown(#[from] ControlledShutdownRequest),
    ControllerRegistration(#[from] ControllerRegistrationRequest),
    CreateAcls(#[from] CreateAclsRequest),
    CreateDelegationToken(#[from] CreateDelegationTokenRequest),
    CreatePartitions(#[from] CreatePartitionsRequest),
    CreateTopics(#[from] CreateTopicsRequest),
    DeleteAcls(#[from] DeleteAclsRequest),
    DeleteGroups(#[from] DeleteGroupsRequest),
    DeleteRecords(#[from] DeleteRecordsRequest),
    DeleteTopics(#[from] DeleteTopicsRequest),
    DescribeAcls(#[from] DescribeAclsRequest),
    DescribeClientQuotas(#[from] DescribeClientQuotasRequest),
    DescribeCluster(#[from] DescribeClusterRequest),
    DescribeConfigs(#[from] DescribeConfigsRequest),
    DescribeDelegationToken(#[from] DescribeDelegationTokenRequest),
    DescribeGroups(#[from] DescribeGroupsRequest),
    DescribeLogDirs(#[from] DescribeLogDirsRequest),
    DescribeProducers(#[from] DescribeProducersRequest),
    DescribeQuorum(#[from] DescribeQuorumRequest),
    DescribeTransactions(#[from] DescribeTransactionsRequest),
    DescribeUserScramCredentials(#[from] DescribeUserScramCredentialsRequest),
    ElectLeaders(#[from] ElectLeadersRequest),
    EndQuorumEpoch(#[from] EndQuorumEpochRequest),
    EndTxn(#[from] EndTxnRequest),
    Envelope(#[from] EnvelopeRequest),
    ExpireDelegationToken(#[from] ExpireDelegationTokenRequest),
    Fetch(#[from] FetchRequest),
    FetchSnapshot(#[from] FetchSnapshotRequest),
    FindCoordinator(#[from] FindCoordinatorRequest),
    GetTelemetrySubscriptions(#[from] GetTelemetrySubscriptionsRequest),
    Heartbeat(#[from] HeartbeatRequest),
    IncrementalAlterConfigs(#[from] IncrementalAlterConfigsRequest),
    InitProducerId(#[from] InitProducerIdRequest),
    JoinGroup(#[from] JoinGroupRequest),
    LeaderAndIsr(#[from] LeaderAndIsrRequest),
    LeaveGroup(#[from] LeaveGroupRequest),
    ListClientMetricsResources(#[from] ListClientMetricsResourcesRequest),
    ListGroups(#[from] ListGroupsRequest),
    ListOffsets(#[from] ListOffsetsRequest),
    ListPartitionReassignments(#[from] ListPartitionReassignmentsRequest),
    ListTransactions(#[from] ListTransactionsRequest),
    Metadata(#[from] MetadataRequest),
    OffsetCommit(#[from] OffsetCommitRequest),
    OffsetDelete(#[from] OffsetDeleteRequest),
    OffsetFetch(#[from] OffsetFetchRequest),
    OffsetForLeaderEpoch(#[from] OffsetForLeaderEpochRequest),
    Produce(#[from] ProduceRequest),
    PushTelemetry(#[from] PushTelemetryRequest),
    RenewDelegationToken(#[from] RenewDelegationTokenRequest),
    SaslAuthenticate(#[from] SaslAuthenticateRequest),
    SaslHandshake(#[from] SaslHandshakeRequest),
    StopReplica(#[from] StopReplicaRequest),
    SyncGroup(#[from] SyncGroupRequest),
    TxnOffsetCommit(#[from] TxnOffsetCommitRequest),
    UnregisterBroker(#[from] UnregisterBrokerRequest),
    UpdateFeatures(#[from] UpdateFeaturesRequest),
    UpdateMetadata(#[from] UpdateMetadataRequest),
    Vote(#[from] VoteRequest),
    WriteTxnMarkers(#[from] WriteTxnMarkersRequest),
}

impl KafkaRequest {
    pub fn encode<B: ByteBufMut>(&self, buf: &mut B, version: i16) -> anyhow::Result<()> {
        match self {
            KafkaRequest::AddOffsetsToTxn(req) => req.encode(buf, version)?,
            KafkaRequest::AddPartitionsToTxn(req) => req.encode(buf, version)?,
            KafkaRequest::AllocateProducerIds(req) => req.encode(buf, version)?,
            KafkaRequest::AlterClientQuotas(req) => req.encode(buf, version)?,
            KafkaRequest::AlterConfigs(req) => req.encode(buf, version)?,
            KafkaRequest::AlterPartitionReassignments(req) => req.encode(buf, version)?,
            KafkaRequest::AlterPartition(req) => req.encode(buf, version)?,
            KafkaRequest::AlterReplicaLogDirs(req) => req.encode(buf, version)?,
            KafkaRequest::AlterUserScramCredentials(req) => req.encode(buf, version)?,
            KafkaRequest::ApiVersions(req) => req.encode(buf, version)?,
            KafkaRequest::AssignReplicasToDirs(req) => req.encode(buf, version)?,
            KafkaRequest::BeginQuorumEpoch(req) => req.encode(buf, version)?,
            KafkaRequest::BrokerHeartbeat(req) => req.encode(buf, version)?,
            KafkaRequest::BrokerRegistration(req) => req.encode(buf, version)?,
            KafkaRequest::ConsumerGroupHeartbeat(req) => req.encode(buf, version)?,
            KafkaRequest::ControlledShutdown(req) => req.encode(buf, version)?,
            KafkaRequest::ControllerRegistration(req) => req.encode(buf, version)?,
            KafkaRequest::CreateAcls(req) => req.encode(buf, version)?,
            KafkaRequest::CreateDelegationToken(req) => req.encode(buf, version)?,
            KafkaRequest::CreatePartitions(req) => req.encode(buf, version)?,
            KafkaRequest::CreateTopics(req) => req.encode(buf, version)?,
            KafkaRequest::DeleteAcls(req) => req.encode(buf, version)?,
            KafkaRequest::DeleteGroups(req) => req.encode(buf, version)?,
            KafkaRequest::DeleteRecords(req) => req.encode(buf, version)?,
            KafkaRequest::DeleteTopics(req) => req.encode(buf, version)?,
            KafkaRequest::DescribeAcls(req) => req.encode(buf, version)?,
            KafkaRequest::DescribeClientQuotas(req) => req.encode(buf, version)?,
            KafkaRequest::DescribeCluster(req) => req.encode(buf, version)?,
            KafkaRequest::DescribeConfigs(req) => req.encode(buf, version)?,
            KafkaRequest::DescribeDelegationToken(req) => req.encode(buf, version)?,
            KafkaRequest::DescribeGroups(req) => req.encode(buf, version)?,
            KafkaRequest::DescribeLogDirs(req) => req.encode(buf, version)?,
            KafkaRequest::DescribeProducers(req) => req.encode(buf, version)?,
            KafkaRequest::DescribeQuorum(req) => req.encode(buf, version)?,
            KafkaRequest::DescribeTransactions(req) => req.encode(buf, version)?,
            KafkaRequest::DescribeUserScramCredentials(req) => req.encode(buf, version)?,
            KafkaRequest::ElectLeaders(req) => req.encode(buf, version)?,
            KafkaRequest::EndQuorumEpoch(req) => req.encode(buf, version)?,
            KafkaRequest::EndTxn(req) => req.encode(buf, version)?,
            KafkaRequest::Envelope(req) => req.encode(buf, version)?,
            KafkaRequest::ExpireDelegationToken(req) => req.encode(buf, version)?,
            KafkaRequest::Fetch(req) => req.encode(buf, version)?,
            KafkaRequest::FetchSnapshot(req) => req.encode(buf, version)?,
            KafkaRequest::FindCoordinator(req) => req.encode(buf, version)?,
            KafkaRequest::GetTelemetrySubscriptions(req) => req.encode(buf, version)?,
            KafkaRequest::Heartbeat(req) => req.encode(buf, version)?,
            KafkaRequest::IncrementalAlterConfigs(req) => req.encode(buf, version)?,
            KafkaRequest::InitProducerId(req) => req.encode(buf, version)?,
            KafkaRequest::JoinGroup(req) => req.encode(buf, version)?,
            KafkaRequest::LeaderAndIsr(req) => req.encode(buf, version)?,
            KafkaRequest::LeaveGroup(req) => req.encode(buf, version)?,
            KafkaRequest::ListClientMetricsResources(req) => req.encode(buf, version)?,
            KafkaRequest::ListGroups(req) => req.encode(buf, version)?,
            KafkaRequest::ListOffsets(req) => req.encode(buf, version)?,
            KafkaRequest::ListPartitionReassignments(req) => req.encode(buf, version)?,
            KafkaRequest::ListTransactions(req) => req.encode(buf, version)?,
            KafkaRequest::Metadata(req) => req.encode(buf, version)?,
            KafkaRequest::OffsetCommit(req) => req.encode(buf, version)?,
            KafkaRequest::OffsetDelete(req) => req.encode(buf, version)?,
            KafkaRequest::OffsetFetch(req) => req.encode(buf, version)?,
            KafkaRequest::OffsetForLeaderEpoch(req) => req.encode(buf, version)?,
            KafkaRequest::Produce(req) => req.encode(buf, version)?,
            KafkaRequest::PushTelemetry(req) => req.encode(buf, version)?,
            KafkaRequest::RenewDelegationToken(req) => req.encode(buf, version)?,
            KafkaRequest::SaslAuthenticate(req) => req.encode(buf, version)?,
            KafkaRequest::SaslHandshake(req) => req.encode(buf, version)?,
            KafkaRequest::StopReplica(req) => req.encode(buf, version)?,
            KafkaRequest::SyncGroup(req) => req.encode(buf, version)?,
            KafkaRequest::TxnOffsetCommit(req) => req.encode(buf, version)?,
            KafkaRequest::UnregisterBroker(req) => req.encode(buf, version)?,
            KafkaRequest::UpdateFeatures(req) => req.encode(buf, version)?,
            KafkaRequest::UpdateMetadata(req) => req.encode(buf, version)?,
            KafkaRequest::Vote(req) => req.encode(buf, version)?,
            KafkaRequest::WriteTxnMarkers(req) => req.encode(buf, version)?,
        }
        Ok(())
    }

    pub fn as_api_key(&self) -> ApiKey {
        match self {
            KafkaRequest::AddOffsetsToTxn(_) => ApiKey::AddOffsetsToTxnKey,
            KafkaRequest::AddPartitionsToTxn(_) => ApiKey::AddPartitionsToTxnKey,
            KafkaRequest::AllocateProducerIds(_) => ApiKey::AllocateProducerIdsKey,
            KafkaRequest::AlterClientQuotas(_) => ApiKey::AlterClientQuotasKey,
            KafkaRequest::AlterConfigs(_) => ApiKey::AlterConfigsKey,
            KafkaRequest::AlterPartitionReassignments(_) => ApiKey::AlterPartitionReassignmentsKey,
            KafkaRequest::AlterPartition(_) => ApiKey::AlterPartitionKey,
            KafkaRequest::AlterReplicaLogDirs(_) => ApiKey::AlterReplicaLogDirsKey,
            KafkaRequest::AlterUserScramCredentials(_) => ApiKey::AlterUserScramCredentialsKey,
            KafkaRequest::ApiVersions(_) => ApiKey::ApiVersionsKey,
            KafkaRequest::AssignReplicasToDirs(_) => ApiKey::AssignReplicasToDirsKey,
            KafkaRequest::BeginQuorumEpoch(_) => ApiKey::BeginQuorumEpochKey,
            KafkaRequest::BrokerHeartbeat(_) => ApiKey::BrokerHeartbeatKey,
            KafkaRequest::BrokerRegistration(_) => ApiKey::BrokerRegistrationKey,
            KafkaRequest::ConsumerGroupHeartbeat(_) => ApiKey::ConsumerGroupHeartbeatKey,
            KafkaRequest::ControlledShutdown(_) => ApiKey::ControlledShutdownKey,
            KafkaRequest::ControllerRegistration(_) => ApiKey::ControllerRegistrationKey,
            KafkaRequest::CreateAcls(_) => ApiKey::CreateAclsKey,
            KafkaRequest::CreateDelegationToken(_) => ApiKey::CreateDelegationTokenKey,
            KafkaRequest::CreatePartitions(_) => ApiKey::CreatePartitionsKey,
            KafkaRequest::CreateTopics(_) => ApiKey::CreateTopicsKey,
            KafkaRequest::DeleteAcls(_) => ApiKey::DeleteAclsKey,
            KafkaRequest::DeleteGroups(_) => ApiKey::DeleteGroupsKey,
            KafkaRequest::DeleteRecords(_) => ApiKey::DeleteRecordsKey,
            KafkaRequest::DeleteTopics(_) => ApiKey::DeleteTopicsKey,
            KafkaRequest::DescribeAcls(_) => ApiKey::DescribeAclsKey,
            KafkaRequest::DescribeClientQuotas(_) => ApiKey::DescribeClientQuotasKey,
            KafkaRequest::DescribeCluster(_) => ApiKey::DescribeClusterKey,
            KafkaRequest::DescribeConfigs(_) => ApiKey::DescribeConfigsKey,
            KafkaRequest::DescribeDelegationToken(_) => ApiKey::DescribeDelegationTokenKey,
            KafkaRequest::DescribeGroups(_) => ApiKey::DescribeGroupsKey,
            KafkaRequest::DescribeLogDirs(_) => ApiKey::DescribeLogDirsKey,
            KafkaRequest::DescribeProducers(_) => ApiKey::DescribeProducersKey,
            KafkaRequest::DescribeQuorum(_) => ApiKey::DescribeQuorumKey,
            KafkaRequest::DescribeTransactions(_) => ApiKey::DescribeTransactionsKey,
            KafkaRequest::DescribeUserScramCredentials(_) => {
                ApiKey::DescribeUserScramCredentialsKey
            }
            KafkaRequest::ElectLeaders(_) => ApiKey::ElectLeadersKey,
            KafkaRequest::EndQuorumEpoch(_) => ApiKey::EndQuorumEpochKey,
            KafkaRequest::EndTxn(_) => ApiKey::EndTxnKey,
            KafkaRequest::Envelope(_) => ApiKey::EnvelopeKey,
            KafkaRequest::ExpireDelegationToken(_) => ApiKey::ExpireDelegationTokenKey,
            KafkaRequest::Fetch(_) => ApiKey::FetchKey,
            KafkaRequest::FetchSnapshot(_) => ApiKey::FetchSnapshotKey,
            KafkaRequest::FindCoordinator(_) => ApiKey::FindCoordinatorKey,
            KafkaRequest::GetTelemetrySubscriptions(_) => ApiKey::GetTelemetrySubscriptionsKey,
            KafkaRequest::Heartbeat(_) => ApiKey::HeartbeatKey,
            KafkaRequest::IncrementalAlterConfigs(_) => ApiKey::IncrementalAlterConfigsKey,
            KafkaRequest::InitProducerId(_) => ApiKey::InitProducerIdKey,
            KafkaRequest::JoinGroup(_) => ApiKey::JoinGroupKey,
            KafkaRequest::LeaderAndIsr(_) => ApiKey::LeaderAndIsrKey,
            KafkaRequest::LeaveGroup(_) => ApiKey::LeaveGroupKey,
            KafkaRequest::ListClientMetricsResources(_) => ApiKey::ListClientMetricsResourcesKey,
            KafkaRequest::ListGroups(_) => ApiKey::ListGroupsKey,
            KafkaRequest::ListOffsets(_) => ApiKey::ListOffsetsKey,
            KafkaRequest::ListPartitionReassignments(_) => ApiKey::ListPartitionReassignmentsKey,
            KafkaRequest::ListTransactions(_) => ApiKey::ListTransactionsKey,
            KafkaRequest::Metadata(_) => ApiKey::MetadataKey,
            KafkaRequest::OffsetCommit(_) => ApiKey::OffsetCommitKey,
            KafkaRequest::OffsetDelete(_) => ApiKey::OffsetDeleteKey,
            KafkaRequest::OffsetFetch(_) => ApiKey::OffsetFetchKey,
            KafkaRequest::OffsetForLeaderEpoch(_) => ApiKey::OffsetForLeaderEpochKey,
            KafkaRequest::Produce(_) => ApiKey::ProduceKey,
            KafkaRequest::PushTelemetry(_) => ApiKey::PushTelemetryKey,
            KafkaRequest::RenewDelegationToken(_) => ApiKey::RenewDelegationTokenKey,
            KafkaRequest::SaslAuthenticate(_) => ApiKey::SaslAuthenticateKey,
            KafkaRequest::SaslHandshake(_) => ApiKey::SaslHandshakeKey,
            KafkaRequest::StopReplica(_) => ApiKey::StopReplicaKey,
            KafkaRequest::SyncGroup(_) => ApiKey::SyncGroupKey,
            KafkaRequest::TxnOffsetCommit(_) => ApiKey::TxnOffsetCommitKey,
            KafkaRequest::UnregisterBroker(_) => ApiKey::UnregisterBrokerKey,
            KafkaRequest::UpdateFeatures(_) => ApiKey::UpdateFeaturesKey,
            KafkaRequest::UpdateMetadata(_) => ApiKey::UpdateMetadataKey,
            KafkaRequest::Vote(_) => ApiKey::VoteKey,
            KafkaRequest::WriteTxnMarkers(_) => ApiKey::WriteTxnMarkersKey,
        }
    }
}

impl VersionedRequest for KafkaRequest {
    fn key(&self) -> i16 {
        self.as_api_key() as i16
    }

    fn versions(&self) -> kafka_protocol::protocol::VersionRange {
        match self {
            KafkaRequest::AddOffsetsToTxn(_) => AddOffsetsToTxnRequest::VERSIONS,
            KafkaRequest::AddPartitionsToTxn(_) => AddPartitionsToTxnRequest::VERSIONS,
            KafkaRequest::AllocateProducerIds(_) => AllocateProducerIdsRequest::VERSIONS,
            KafkaRequest::AlterClientQuotas(_) => AlterClientQuotasRequest::VERSIONS,
            KafkaRequest::AlterConfigs(_) => AlterConfigsRequest::VERSIONS,
            KafkaRequest::AlterPartitionReassignments(_) => {
                AlterPartitionReassignmentsRequest::VERSIONS
            }
            KafkaRequest::AlterPartition(_) => AlterPartitionRequest::VERSIONS,
            KafkaRequest::AlterReplicaLogDirs(_) => AlterReplicaLogDirsRequest::VERSIONS,
            KafkaRequest::AlterUserScramCredentials(_) => {
                AlterUserScramCredentialsRequest::VERSIONS
            }
            KafkaRequest::ApiVersions(_) => ApiVersionsRequest::VERSIONS,
            KafkaRequest::AssignReplicasToDirs(_) => AssignReplicasToDirsRequest::VERSIONS,
            KafkaRequest::BeginQuorumEpoch(_) => BeginQuorumEpochRequest::VERSIONS,
            KafkaRequest::BrokerHeartbeat(_) => BrokerHeartbeatRequest::VERSIONS,
            KafkaRequest::BrokerRegistration(_) => BrokerRegistrationRequest::VERSIONS,
            KafkaRequest::ConsumerGroupHeartbeat(_) => ConsumerGroupHeartbeatRequest::VERSIONS,
            KafkaRequest::ControlledShutdown(_) => ControlledShutdownRequest::VERSIONS,
            KafkaRequest::ControllerRegistration(_) => ControllerRegistrationRequest::VERSIONS,
            KafkaRequest::CreateAcls(_) => CreateAclsRequest::VERSIONS,
            KafkaRequest::CreateDelegationToken(_) => CreateDelegationTokenRequest::VERSIONS,
            KafkaRequest::CreatePartitions(_) => CreatePartitionsRequest::VERSIONS,
            KafkaRequest::CreateTopics(_) => CreateTopicsRequest::VERSIONS,
            KafkaRequest::DeleteAcls(_) => DeleteAclsRequest::VERSIONS,
            KafkaRequest::DeleteGroups(_) => DeleteGroupsRequest::VERSIONS,
            KafkaRequest::DeleteRecords(_) => DeleteRecordsRequest::VERSIONS,
            KafkaRequest::DeleteTopics(_) => DeleteTopicsRequest::VERSIONS,
            KafkaRequest::DescribeAcls(_) => DescribeAclsRequest::VERSIONS,
            KafkaRequest::DescribeClientQuotas(_) => DescribeClientQuotasRequest::VERSIONS,
            KafkaRequest::DescribeCluster(_) => DescribeClusterRequest::VERSIONS,
            KafkaRequest::DescribeConfigs(_) => DescribeConfigsRequest::VERSIONS,
            KafkaRequest::DescribeDelegationToken(_) => DescribeDelegationTokenRequest::VERSIONS,
            KafkaRequest::DescribeGroups(_) => DescribeGroupsRequest::VERSIONS,
            KafkaRequest::DescribeLogDirs(_) => DescribeLogDirsRequest::VERSIONS,
            KafkaRequest::DescribeProducers(_) => DescribeProducersRequest::VERSIONS,
            KafkaRequest::DescribeQuorum(_) => DescribeQuorumRequest::VERSIONS,
            KafkaRequest::DescribeTransactions(_) => DescribeTransactionsRequest::VERSIONS,
            KafkaRequest::DescribeUserScramCredentials(_) => {
                DescribeUserScramCredentialsRequest::VERSIONS
            }
            KafkaRequest::ElectLeaders(_) => ElectLeadersRequest::VERSIONS,
            KafkaRequest::EndQuorumEpoch(_) => EndQuorumEpochRequest::VERSIONS,
            KafkaRequest::EndTxn(_) => EndTxnRequest::VERSIONS,
            KafkaRequest::Envelope(_) => EnvelopeRequest::VERSIONS,
            KafkaRequest::ExpireDelegationToken(_) => ExpireDelegationTokenRequest::VERSIONS,
            KafkaRequest::Fetch(_) => FetchRequest::VERSIONS,
            KafkaRequest::FetchSnapshot(_) => FetchSnapshotRequest::VERSIONS,
            KafkaRequest::FindCoordinator(_) => FindCoordinatorRequest::VERSIONS,
            KafkaRequest::GetTelemetrySubscriptions(_) => {
                GetTelemetrySubscriptionsRequest::VERSIONS
            }
            KafkaRequest::Heartbeat(_) => HeartbeatRequest::VERSIONS,
            KafkaRequest::IncrementalAlterConfigs(_) => IncrementalAlterConfigsRequest::VERSIONS,
            KafkaRequest::InitProducerId(_) => InitProducerIdRequest::VERSIONS,
            KafkaRequest::JoinGroup(_) => JoinGroupRequest::VERSIONS,
            KafkaRequest::LeaderAndIsr(_) => LeaderAndIsrRequest::VERSIONS,
            KafkaRequest::LeaveGroup(_) => LeaveGroupRequest::VERSIONS,
            KafkaRequest::ListClientMetricsResources(_) => {
                ListClientMetricsResourcesRequest::VERSIONS
            }
            KafkaRequest::ListGroups(_) => ListGroupsRequest::VERSIONS,
            KafkaRequest::ListOffsets(_) => ListOffsetsRequest::VERSIONS,
            KafkaRequest::ListPartitionReassignments(_) => {
                ListPartitionReassignmentsRequest::VERSIONS
            }
            KafkaRequest::ListTransactions(_) => ListTransactionsRequest::VERSIONS,
            KafkaRequest::Metadata(_) => MetadataRequest::VERSIONS,
            KafkaRequest::OffsetCommit(_) => OffsetCommitRequest::VERSIONS,
            KafkaRequest::OffsetDelete(_) => OffsetDeleteRequest::VERSIONS,
            KafkaRequest::OffsetFetch(_) => OffsetFetchRequest::VERSIONS,
            KafkaRequest::OffsetForLeaderEpoch(_) => OffsetForLeaderEpochRequest::VERSIONS,
            KafkaRequest::Produce(_) => ProduceRequest::VERSIONS,
            KafkaRequest::PushTelemetry(_) => PushTelemetryRequest::VERSIONS,
            KafkaRequest::RenewDelegationToken(_) => RenewDelegationTokenRequest::VERSIONS,
            KafkaRequest::SaslAuthenticate(_) => SaslAuthenticateRequest::VERSIONS,
            KafkaRequest::SaslHandshake(_) => SaslHandshakeRequest::VERSIONS,
            KafkaRequest::StopReplica(_) => StopReplicaRequest::VERSIONS,
            KafkaRequest::SyncGroup(_) => SyncGroupRequest::VERSIONS,
            KafkaRequest::TxnOffsetCommit(_) => TxnOffsetCommitRequest::VERSIONS,
            KafkaRequest::UnregisterBroker(_) => UnregisterBrokerRequest::VERSIONS,
            KafkaRequest::UpdateFeatures(_) => UpdateFeaturesRequest::VERSIONS,
            KafkaRequest::UpdateMetadata(_) => UpdateMetadataRequest::VERSIONS,
            KafkaRequest::Vote(_) => VoteRequest::VERSIONS,
            KafkaRequest::WriteTxnMarkers(_) => WriteTxnMarkersRequest::VERSIONS,
        }
    }
}
